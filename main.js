!function(){"use strict";const t=document.querySelector("#profile-edit-button"),e=document.querySelector(".profile__add-button"),s=document.querySelector(".profile__title"),n=document.querySelector(".profile__subtitle"),i=document.querySelector("#profile-title-input"),o=document.querySelector("#profile-subtitle-input"),r={};var l,a=class{constructor(t,e,s){this._name=t.name,this._link=t.link,this._handleCardImageClick=s,this._cardSelector=e}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleCardImageClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}},c=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){t.classList.remove(this._inputErrorClass);const e=this._form.querySelector(`#${t.id}-error`);e.textContent="",e.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}disableButton(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_toggleButtonState(t){this._hasInvalidInput(t)?this.disableButton():(this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1)}_hasInvalidInput(){return!this._inputList.every((t=>t.validity.valid))}_checkInputValidity(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitBtn=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}};class u{constructor(t){this._popupElement=document.querySelector(t),this._popupCloseBtn=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this),this._handleModalClose=this._handleModalClose.bind(this),this._handleButtonClose=this._handleButtonClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",this._handleModalClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("click",this._handleModalClose)}_handleOpenPopup(t){t.target===this._popupElement&&this.open()}_handleEscClose(t){"Escape"===t.key&&this.close()}_handleModalClose(t){t.target===this._popupElement&&this.close()}_handleButtonClose(){this.close()}setEventListeners(){this._popupCloseBtn.addEventListener("click",this._handleButtonClose)}}class d extends u{constructor(t,e){let{popupSelector:s}=t;super(s),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputs=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=e}_getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}getForm(){return this._popupForm}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._handleFormSubmit(e),this.close()}))}reset(){this._popupForm.reset()}}function _(t,e){const s={name:t,link:e};S.open(s)}function h(t){return new a(t,"#card-template",_).getView()}l={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:".modal__form"},document.querySelectorAll(l.formSelector).forEach((t=>{const e=new c(l,t),s=t.getAttribute("name");r[s]=e,e.enableValidation()})),t.addEventListener("click",(()=>{i.value=s.textContent,o.value=n.textContent,v.open(),r["edit-profile"].resetValidation()})),e.addEventListener("click",(()=>{E.open()}));const p=new class{constructor(t){let{titleSelector:e,subtitleSelector:s}=t;this._titleElement=document.querySelector(e),this._subtitleElement=document.querySelector(s)}getUserInfo(){return{title:this._titleElement.textContent,subtitle:this._subtitleElement.textContent}}setUserInfo(t,e){this._titleElement.textContent=t,this._subtitleElement.textContent=e}}({titleSelector:".profile__title",subtitleSelector:".profile__subtitle"}),m=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:function(t){const e=h(t);m.addItem(e)}},".cards__list");m.renderItems();const E=new d({popupSelector:"#add-card-modal"},(function(t){const e=h(t);m.addItem(e),E.reset(),r["add-card"].disableButton(),E.close()}));E.setEventListeners();const v=new d({popupSelector:"#edit-modal"},(function(t){let{title:e,subtitle:s}=t;p.setUserInfo(e,s)}));v.setEventListeners();const S=new class extends u{constructor(t,e,s){let{popupSelector:n}=t;super(n),this._image=document.querySelector(e),this._caption=document.querySelector(s)}open(t){super.open(),this._image.src=t.link,this._image.alt=t.name,this._caption.textContent=t.name}close(){super.close()}}({popupSelector:"#preview-image-modal"},".modal__image",".modal__title")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,