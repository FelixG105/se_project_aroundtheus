!function(){"use strict";const e=document.querySelector("#edit-avatar-btn"),t=document.querySelector("#profile-edit-button"),s=document.querySelector(".profile__add-button"),i=document.querySelector(".profile__title"),r=document.querySelector(".profile__subtitle"),n=document.querySelector("#profile-title-input"),o=document.querySelector("#profile-subtitle-input"),a={};var l=class{constructor(e,t,s,i,r,n,o){this._name=e.name,this._link=e.link,this._handleCardImageClick=s,this._cardSelector=t,this._cardId=e._id,this._handleDeleteCard=i,this._handleLikeCard=r,this._handleDeleteLike=n,this._isLiked=!1,this._confirmDeletePopup=o}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteBtnClick(this._cardId,this._cardElement)})),this._cardImage.addEventListener("click",(()=>{this._handleCardImageClick(this._name,this._link)}))}_handleDeleteBtnClick(){this._confirmDeletePopup.open({cardId:this._cardId,cardElement:this._cardElement})}_handleLikeIcon(){this._isLiked?this._handleDeleteLike(this._cardId).then((e=>{this._likeButton.classList.remove("card__like-button_active"),this._likeCounter.textContent=e.isLiked?1:"",this._isLiked=!1})).catch((e=>console.log(e))):this._handleLikeCard(this._cardId).then((e=>{this._likeButton.classList.add("card__like-button_active"),this._likeCounter.textContent=e.isLiked?1:"",this._isLiked=!0})).catch((e=>console.error(e)))}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._likeCounter=this._cardElement.querySelector(".card__like-counter"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}},d=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){e.classList.remove(this._inputErrorClass);const t=this._form.querySelector(`#${e.id}-error`);t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}disableButton(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_toggleButtonState(e){this._hasInvalidInput(e)?this.disableButton():(this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitBtn=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class h{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class c{constructor(e){this._popupElement=document.querySelector(e),this._popupCloseBtn=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this),this._handleModalClose=this._handleModalClose.bind(this),this._handleButtonClose=this._handleButtonClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",this._handleModalClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("click",this._handleModalClose)}_handleOpenPopup(e){e.target===this._popupElement&&this.open()}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleModalClose(e){e.target===this._popupElement&&this.close()}_handleButtonClose(){console.log("button clicked"),this.close()}setEventListeners(){this._popupCloseBtn.addEventListener("click",this._handleButtonClose)}}class _ extends c{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputs=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._popupSubmit=this._popupForm.querySelector(".modal__submit")}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}open(e){if(super.open(),"confirm-delete-modal"===this._popupElement.id){this._cardToDelete=e;const t=this._popupForm.querySelector(".modal__submit");t&&t.focus()}}renderLoading(e){this._popupSubmit.textContent=!0===e?"Saving...":"Save"}getForm(){return this._popupForm}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{if(e.preventDefault(),"confirm-delete-modal"===this._popupElement.id){const{cardId:e,cardElement:t}=this._cardToDelete;this._handleFormSubmit(e,t)}else{const e=this._getInputValues();this._handleFormSubmit(e)}}))}reset(){this._popupForm.reset()}}var u;function m(e,t){const s={name:e,link:t};C.open(s)}function p(e){return new l(e,"#card-template",m,E,g.likeCard.bind(g),g.deleteLike.bind(g),S).getView()}function v(e){const t=p(e);y.addItem(t)}function E(e,t){S.renderLoading(!0),g.deleteCard(e).then((()=>{t.remove(),S.close(),S.renderLoading(!1)})).catch((e=>{console.error("Failed to delete card:",e),S.renderLoading(!1)}))}u={inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:".modal__form"},document.querySelectorAll(u.formSelector).forEach((e=>{const t=new d(u,e),s=e.getAttribute("name");a[s]=t,t.enableValidation()})),e.addEventListener("click",(()=>{k.open()})),t.addEventListener("click",(()=>{n.value=i.textContent,o.value=r.textContent,f.open(),a["edit-profile"].resetValidation()})),s.addEventListener("click",(()=>{L.open()}));const b=new class{constructor(e){let{titleSelector:t,subtitleSelector:s,avatarSelector:i}=e;this._titleElement=document.querySelector(t),this._subtitleElement=document.querySelector(s),this._avatarElement=document.querySelector(i)}getUserInfo(){return{title:this._titleElement.textContent,subtitle:this._subtitleElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{title:t,subtitle:s,avatar:i}=e;this._titleElement.textContent=t,this._subtitleElement.textContent=s,this._avatarElement.src=i}}({titleSelector:".profile__title",subtitleSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),L=new _("#add-card-modal",(function(e){let{name:t,link:s}=e;L.renderLoading(!0),g.addNewCard({name:t,link:s}).then((e=>{const t=p(e);y.addItem(t),L.reset(),a["add-card"].disableButton(),L.close(),L.renderLoading(!1)})).catch((e=>{console.error("Failed to add card:",e),L.renderLoading(!1)}))}));L.setEventListeners();const f=new _("#edit-modal",(function(e){let{title:t,subtitle:s}=e;f.renderLoading(!0),g.updateUserInfo(t,s).then((e=>{b.setUserInfo({title:e.name,subtitle:e.about,avatar:b.getUserInfo().avatar}),f.close(),f.renderLoading(!1)})).catch((e=>{console.error("Failed to update profile:",e),f.renderLoading(!1)}))}));f.setEventListeners();const C=new class extends c{constructor(e,t,s){let{popupSelector:i}=e;super(i),this._image=document.querySelector(t),this._caption=document.querySelector(s)}open(e){super.open(),this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name}setEventListeners(){super.setEventListeners(),this.close()}}({popupSelector:"#preview-image-modal"},".modal__image",".modal__title");C.setEventListeners();const S=new _("#confirm-delete-modal",E);S.setEventListeners();const k=new _("#edit-avatar-modal",(function(e){let{avatar:t}=e;k.renderLoading(!0),g.updateAvatar(t).then((e=>{b.setUserInfo({title:e.name,subtitle:e.about,avatar:e.avatar}),k.close(),k.renderLoading(!1),k.reset()})).catch((e=>{console.error("Failed to update avatar:",e),k.renderLoading(!1)}))}));k.setEventListeners();const g=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}updateUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}deleteLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{Authorization:"d8006e48-84bc-4f5e-ac9d-e1c5356a3843","Content-Type":"application/json"}});let y;Promise.all([g.getUserInfo(),g.getInitialCards()]).then((e=>{let[t,s]=e;y=new h({items:s,renderer:v},".cards__list"),y.renderItems(),b.setUserInfo({title:t.name,subtitle:t.about,avatar:t.avatar})})).catch((e=>console.error(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQUt6QixLQUFLa0wsZ0JBQ2YsQ0FFQTFDLFFBQUFBLENBQVNqSCxHQUNQLE9BQU9rSyxNQUFNLEdBQUd6TCxLQUFLZ0wsa0JBQWtCekosVUFBZ0IsQ0FDckRtSyxPQUFRLE1BQ1JYLFFBQVMvSyxLQUFLaUwsV0FDYnhKLEtBQUt6QixLQUFLa0wsZ0JBQ2YsQ0FFQXpDLFVBQUFBLENBQVdsSCxHQUNULE9BQU9rSyxNQUFNLEdBQUd6TCxLQUFLZ0wsa0JBQWtCekosVUFBZ0IsQ0FDckRtSyxPQUFRLFNBQ1JYLFFBQVMvSyxLQUFLaUwsV0FDYnhKLEtBQUt6QixLQUFLa0wsZ0JBQ2YsQ0FFQU4sWUFBQUEsQ0FBYVosR0FDWCxPQUFPeUIsTUFBTSxHQUFHekwsS0FBS2dMLDJCQUE0QixDQUMvQ1UsT0FBUSxRQUNSWCxRQUFTL0ssS0FBS2lMLFNBQ2RVLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkI3QixPQUFRQSxNQUVUdkksS0FBS3pCLEtBQUtrTCxnQkFDZixHQ3NJa0IsQ0FDbEJKLFFBQVMsa0RBQ1RDLFFBQVMsQ0FDUGUsY0FBZSx1Q0FDZixlQUFnQixzQkFLcEIsSUFBSWxELEVBRUp5QyxRQUFRVSxJQUFJLENBQUN4RCxFQUFJc0IsY0FBZXRCLEVBQUlpRCxvQkFDakMvSixNQUFLdUssSUFBMEIsSUFBeEJuQixFQUFVcEwsR0FBU3VNLEVBRXpCcEQsRUFBVSxJQUFJekQsRUFDWixDQUFFRyxNQUFPN0YsRUFBVThGLFNBQVVvRCxHQUM3QixnQkFFRkMsRUFBUWpELGNBQ1IyRCxFQUFTVyxZQUFZLENBQ25CSCxNQUFPZSxFQUFTM0ssS0FDaEI2SixTQUFVYyxFQUFTUCxNQUNuQk4sT0FBUWEsRUFBU2IsUUFDakIsSUFFSGhJLE9BQU9DLEdBQVFDLFFBQVFHLE1BQU1KLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kLXRoZS11cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kLXRoZS11cy8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL2Fyb3VuZC10aGUtdXMvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9hcm91bmQtdGhlLXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS1FbGVtZW50cy0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi8vICBCdXR0b25zXHJcbmNvbnN0IGF2YXRhckVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtYXZhdGFyLWJ0blwiKTtcclxuY29uc3QgcHJvZmlsZUVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IGFkZE5ld0NhcmRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XHJcblxyXG4vLyBET00gRWxlbWVudHNcclxuY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKTtcclxuY29uc3QgcHJvZmlsZVN1YnRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19zdWJ0aXRsZVwiKTtcclxuXHJcbi8vIEZvcm0gRGF0YVxyXG5jb25zdCBwcm9maWxlVGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKTtcclxuY29uc3QgcHJvZmlsZVN1YnRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtc3VidGl0bGUtaW5wdXRcIik7XHJcblxyXG5jb25zdCBjYXJkU2VsZWN0b3IgPSBcIiNjYXJkLXRlbXBsYXRlXCI7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLVZhbGlkYXRpb24tLS0tLS0tLS0tLS0tLS0tKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fc3VibWl0XCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc3VibWl0X2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxufTtcclxuXHJcbmNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XHJcblxyXG5leHBvcnQge1xyXG4gIGluaXRpYWxDYXJkcyxcclxuICBhdmF0YXJFZGl0QnRuLFxyXG4gIHByb2ZpbGVFZGl0QnRuLFxyXG4gIGFkZE5ld0NhcmRCdG4sXHJcbiAgcHJvZmlsZVRpdGxlLFxyXG4gIHByb2ZpbGVTdWJ0aXRsZSxcclxuICBwcm9maWxlVGl0bGVJbnB1dCxcclxuICBwcm9maWxlU3VidGl0bGVJbnB1dCxcclxuICBjYXJkU2VsZWN0b3IsXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxyXG4gIGZvcm1WYWxpZGF0b3JzLFxyXG59O1xyXG4iLCJjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGNhcmREYXRhLFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlQ2FyZEltYWdlQ2xpY2ssXHJcbiAgICBoYW5kbGVEZWxldGVDYXJkLFxyXG4gICAgaGFuZGxlTGlrZUNhcmQsXHJcbiAgICBoYW5kbGVEZWxldGVMaWtlLFxyXG4gICAgY29uZmlybURlbGV0ZUNhcmRQb3B1cFxyXG4gICkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRJbWFnZUNsaWNrID0gaGFuZGxlQ2FyZEltYWdlQ2xpY2s7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9jYXJkSWQgPSBjYXJkRGF0YS5faWQ7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gaGFuZGxlRGVsZXRlQ2FyZDtcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDYXJkID0gaGFuZGxlTGlrZUNhcmQ7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVMaWtlID0gaGFuZGxlRGVsZXRlTGlrZTtcclxuICAgIHRoaXMuX2lzTGlrZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuX2NvbmZpcm1EZWxldGVQb3B1cCA9IGNvbmZpcm1EZWxldGVDYXJkUG9wdXA7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VJY29uKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9kZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQnRuQ2xpY2sodGhpcy5fY2FyZElkLCB0aGlzLl9jYXJkRWxlbWVudCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZEltYWdlQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVEZWxldGVCdG5DbGljaygpIHtcclxuICAgIHRoaXMuX2NvbmZpcm1EZWxldGVQb3B1cC5vcGVuKHtcclxuICAgICAgY2FyZElkOiB0aGlzLl9jYXJkSWQsXHJcbiAgICAgIGNhcmRFbGVtZW50OiB0aGlzLl9jYXJkRWxlbWVudCxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VJY29uKCkge1xyXG4gICAgaWYgKHRoaXMuX2lzTGlrZWQpIHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlTGlrZSh0aGlzLl9jYXJkSWQpXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgICAgICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSByZXMuaXNMaWtlZCA/IDEgOiBcIlwiO1xyXG4gICAgICAgICAgdGhpcy5faXNMaWtlZCA9IGZhbHNlO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGFuZGxlTGlrZUNhcmQodGhpcy5fY2FyZElkKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgICAgICAgIHRoaXMuX2xpa2VDb3VudGVyLnRleHRDb250ZW50ID0gcmVzLmlzTGlrZWQgPyAxIDogXCJcIjtcclxuICAgICAgICAgIHRoaXMuX2lzTGlrZWQgPSB0cnVlO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICB9XHJcblxyXG4gIGdldFZpZXcoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiXHJcbiAgICApO1xyXG4gICAgdGhpcy5fbGlrZUNvdW50ZXIgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtY291bnRlclwiKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmQ7XHJcbiIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcclxuXHJcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGlzYWJsZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dEVscykge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dEVscykpIHtcclxuICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdG4uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnRuLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gIXRoaXMuX2lucHV0TGlzdC5ldmVyeSgoaW5wdXQpID0+IGlucHV0LnZhbGlkaXR5LnZhbGlkKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgIH1cclxuICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICB0aGlzLl9zdWJtaXRCdG4gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyOyAvL2EgZnVuY3Rpb24gdGhhdCB0YWtlcyBpbiAncmF3JyBkYXRhLCBjb252ZXJ0cyBpdCB0byBodG1sLCBhbmQgdGhlbiBwbGFjZXMgaXQgb24gdGhlIHBhZ2UvZG9tXHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMucmV2ZXJzZSgpLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG5cclxuICAgIHRoaXMuX3BvcHVwQ2xvc2VCdG4gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcblxyXG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5faGFuZGxlTW9kYWxDbG9zZSA9IHRoaXMuX2hhbmRsZU1vZGFsQ2xvc2UuYmluZCh0aGlzKTtcclxuICAgIHRoaXMuX2hhbmRsZUJ1dHRvbkNsb3NlID0gdGhpcy5faGFuZGxlQnV0dG9uQ2xvc2UuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlTW9kYWxDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG5cclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlTW9kYWxDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlT3BlblBvcHVwKGV2dCkge1xyXG4gICAgaWYgKGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCkge1xyXG4gICAgICB0aGlzLm9wZW4oKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYW5kbGVNb2RhbENsb3NlKGV2dCkge1xyXG4gICAgaWYgKGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlQnV0dG9uQ2xvc2UoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcImJ1dHRvbiBjbGlja2VkXCIpO1xyXG4gICAgdGhpcy5jbG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cENsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVCdXR0b25DbG9zZSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5faW5wdXRzID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9wb3B1cFN1Ym1pdCA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXRcIik7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dE9iaiA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGlucHV0T2JqW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIC8vIHJldHVybnMgZGF0YSBhcyBvYmplY3RcclxuICAgIHJldHVybiBpbnB1dE9iajtcclxuICB9XHJcblxyXG4gIG9wZW4oY2FyZERhdGEpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIGlmICh0aGlzLl9wb3B1cEVsZW1lbnQuaWQgPT09IFwiY29uZmlybS1kZWxldGUtbW9kYWxcIikge1xyXG4gICAgICB0aGlzLl9jYXJkVG9EZWxldGUgPSBjYXJkRGF0YTtcclxuXHJcbiAgICAgIC8vIEZpbmQgYW5kIGZvY3VzIHRoZSBzdWJtaXQvY29uZmlybSBidXR0b25cclxuICAgICAgY29uc3Qgc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3N1Ym1pdFwiKTtcclxuICAgICAgaWYgKHN1Ym1pdEJ1dHRvbikge1xyXG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5mb2N1cygpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZykge1xyXG4gICAgaWYgKGlzTG9hZGluZyA9PT0gdHJ1ZSkge1xyXG4gICAgICB0aGlzLl9wb3B1cFN1Ym1pdC50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9wb3B1cFN1Ym1pdC50ZXh0Q29udGVudCA9IFwiU2F2ZVwiO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0Rm9ybSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9wb3B1cEZvcm07XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICBpZiAodGhpcy5fcG9wdXBFbGVtZW50LmlkID09PSBcImNvbmZpcm0tZGVsZXRlLW1vZGFsXCIpIHtcclxuICAgICAgICBjb25zdCB7IGNhcmRJZCwgY2FyZEVsZW1lbnQgfSA9IHRoaXMuX2NhcmRUb0RlbGV0ZTtcclxuXHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdChjYXJkSWQsIGNhcmRFbGVtZW50KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcbiIsImNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgLy8gaWYgdGhlIHNlcnZlciByZXR1cm5zIGFuIGVycm9yLCByZWplY3QgdGhlIHByb21pc2VcclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVVzZXJJbmZvKHRpdGxlLCBzdWJ0aXRsZSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IHRpdGxlLFxyXG4gICAgICAgIGFib3V0OiBzdWJ0aXRsZSxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGFkZE5ld0NhcmQoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgbGluazogbGluayxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVMaWtlKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVBdmF0YXIoYXZhdGFyKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogYXZhdGFyLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gb3RoZXIgbWV0aG9kcyBmb3Igd29ya2luZyB3aXRoIHRoZSBBUElcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBpO1xyXG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQge1xyXG4gIGluaXRpYWxDYXJkcyxcclxuICBhdmF0YXJFZGl0QnRuLFxyXG4gIHByb2ZpbGVFZGl0QnRuLFxyXG4gIGFkZE5ld0NhcmRCdG4sXHJcbiAgcHJvZmlsZVRpdGxlLFxyXG4gIHByb2ZpbGVTdWJ0aXRsZSxcclxuICBwcm9maWxlVGl0bGVJbnB1dCxcclxuICBwcm9maWxlU3VidGl0bGVJbnB1dCxcclxuICBjYXJkU2VsZWN0b3IsXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxyXG4gIGZvcm1WYWxpZGF0b3JzLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLVZhbGlkYXRpb24tLS0tLS0tLS0tLS0tLS0tKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9ICh2YWxpZGF0aW9uU2V0dGluZ3MpID0+IHtcclxuICBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodmFsaWRhdGlvblNldHRpbmdzLmZvcm1TZWxlY3Rvcik7XHJcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcclxuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25TZXR0aW5ncywgZm9ybUVsZW1lbnQpO1xyXG4gICAgY29uc3QgZm9ybU5hbWUgPSBmb3JtRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1xyXG5cclxuICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcclxuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcbn07XHJcbmVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvblNldHRpbmdzKTtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tRXZlbnQgSGFuZGxlcnMtLS0tLS0tLS0tLS0qL1xyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5mdW5jdGlvbiBoYW5kbGVDYXJkSW1hZ2VDbGljayhuYW1lLCBsaW5rKSB7XHJcbiAgY29uc3QgZGF0YSA9IHsgbmFtZSwgbGluayB9O1xyXG4gIHBvcHVwV2l0aEltYWdlLm9wZW4oZGF0YSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldENhcmRFbGVtZW50KGNhcmREYXRhKSB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZERhdGEsXHJcbiAgICBjYXJkU2VsZWN0b3IsXHJcbiAgICBoYW5kbGVDYXJkSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNhcmQsXHJcbiAgICBhcGkubGlrZUNhcmQuYmluZChhcGkpLFxyXG4gICAgYXBpLmRlbGV0ZUxpa2UuYmluZChhcGkpLFxyXG4gICAgY29uZmlybURlbGV0ZUNhcmRcclxuICApO1xyXG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVuZGVyQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gZ2V0Q2FyZEVsZW1lbnQoY2FyZERhdGEpO1xyXG4gIHNlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVFZGl0U3VibWl0KHsgdGl0bGUsIHN1YnRpdGxlIH0pIHtcclxuICBlZGl0UHJvZmlsZVBvcHVwV2l0aEZvcm0ucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC51cGRhdGVVc2VySW5mbyh0aXRsZSwgc3VidGl0bGUpXHJcbiAgICAudGhlbigodXBkYXRlZFVzZXIpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oe1xyXG4gICAgICAgIHRpdGxlOiB1cGRhdGVkVXNlci5uYW1lLFxyXG4gICAgICAgIHN1YnRpdGxlOiB1cGRhdGVkVXNlci5hYm91dCxcclxuICAgICAgICBhdmF0YXI6IHVzZXJJbmZvLmdldFVzZXJJbmZvKCkuYXZhdGFyLFxyXG4gICAgICB9KTtcclxuICAgICAgZWRpdFByb2ZpbGVQb3B1cFdpdGhGb3JtLmNsb3NlKCk7XHJcbiAgICAgIGVkaXRQcm9maWxlUG9wdXBXaXRoRm9ybS5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBwcm9maWxlOlwiLCBlcnIpO1xyXG4gICAgICBlZGl0UHJvZmlsZVBvcHVwV2l0aEZvcm0ucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdCh7IG5hbWUsIGxpbmsgfSkge1xyXG4gIGFkZENhcmRQb3B1cFdpdGhGb3JtLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAuYWRkTmV3Q2FyZCh7IG5hbWUsIGxpbmsgfSlcclxuICAgIC50aGVuKChjYXJkRGF0YSkgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdldENhcmRFbGVtZW50KGNhcmREYXRhKTtcclxuICAgICAgc2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcclxuICAgICAgYWRkQ2FyZFBvcHVwV2l0aEZvcm0ucmVzZXQoKTtcclxuICAgICAgZm9ybVZhbGlkYXRvcnNbXCJhZGQtY2FyZFwiXS5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICAgIGFkZENhcmRQb3B1cFdpdGhGb3JtLmNsb3NlKCk7XHJcbiAgICAgIGFkZENhcmRQb3B1cFdpdGhGb3JtLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gYWRkIGNhcmQ6XCIsIGVycik7XHJcbiAgICAgIGFkZENhcmRQb3B1cFdpdGhGb3JtLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmQoY2FyZElkLCBjYXJkRWxlbWVudCkge1xyXG4gIGNvbmZpcm1EZWxldGVDYXJkLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAuZGVsZXRlQ2FyZChjYXJkSWQpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIGNhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICBjb25maXJtRGVsZXRlQ2FyZC5jbG9zZSgpO1xyXG4gICAgICBjb25maXJtRGVsZXRlQ2FyZC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGRlbGV0ZSBjYXJkOlwiLCBlcnIpO1xyXG4gICAgICBjb25maXJtRGVsZXRlQ2FyZC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVFZGl0QXZhdGFyKHsgYXZhdGFyIH0pIHtcclxuICBlZGl0QXZhdGFyUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC51cGRhdGVBdmF0YXIoYXZhdGFyKVxyXG4gICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcclxuICAgICAgICB0aXRsZTogdXNlckRhdGEubmFtZSxcclxuICAgICAgICBzdWJ0aXRsZTogdXNlckRhdGEuYWJvdXQsXHJcbiAgICAgICAgYXZhdGFyOiB1c2VyRGF0YS5hdmF0YXIsXHJcbiAgICAgIH0pO1xyXG4gICAgICBlZGl0QXZhdGFyUG9wdXAuY2xvc2UoKTtcclxuICAgICAgZWRpdEF2YXRhclBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgICBlZGl0QXZhdGFyUG9wdXAucmVzZXQoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBhdmF0YXI6XCIsIGVycik7XHJcbiAgICAgIGVkaXRBdmF0YXJQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLUV2ZW50IExpc3RlbmVycy0tLS0tLS0tLS0tKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLy8gRWRpdCBBdmF0YXJcclxuYXZhdGFyRWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGVkaXRBdmF0YXJQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLy8gUHJvZmlsZSBFZGl0XHJcbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgcHJvZmlsZVRpdGxlSW5wdXQudmFsdWUgPSBwcm9maWxlVGl0bGUudGV4dENvbnRlbnQ7XHJcbiAgcHJvZmlsZVN1YnRpdGxlSW5wdXQudmFsdWUgPSBwcm9maWxlU3VidGl0bGUudGV4dENvbnRlbnQ7XHJcbiAgZWRpdFByb2ZpbGVQb3B1cFdpdGhGb3JtLm9wZW4oKTtcclxuICBmb3JtVmFsaWRhdG9yc1tcImVkaXQtcHJvZmlsZVwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG4vLyBBZGQgTmV3IENhcmQgQnV0dG9uXHJcbmFkZE5ld0NhcmRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhZGRDYXJkUG9wdXBXaXRoRm9ybS5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLy8gaW5pdGlhbENhcmRzLmZvckVhY2goKGNhcmREYXRhKSA9PiByZW5kZXJDYXJkKGNhcmREYXRhLCBjYXJkTGlzdEVsKSk7XHJcblxyXG4vL05PVEUgLSBJbnN0YW50aWF0ZSBQb3B1cCBDbGFzc2VzXHJcblxyXG4vL1VzZXJJbmZvIENsYXNzXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICB0aXRsZVNlbGVjdG9yOiBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIHN1YnRpdGxlU2VsZWN0b3I6IFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIsXHJcbiAgYXZhdGFyU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2F2YXRhclwiLFxyXG59KTtcclxuXHJcbi8vIFBvcHVwc1xyXG5cclxuLy9Qb3B1cFdpdGhGb3JtXHJcbmNvbnN0IGFkZENhcmRQb3B1cFdpdGhGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjYWRkLWNhcmQtbW9kYWxcIixcclxuXHJcbiAgaGFuZGxlQWRkQ2FyZFN1Ym1pdFxyXG4pO1xyXG5hZGRDYXJkUG9wdXBXaXRoRm9ybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgZWRpdFByb2ZpbGVQb3B1cFdpdGhGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjZWRpdC1tb2RhbFwiLFxyXG5cclxuICBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdFxyXG4pO1xyXG5lZGl0UHJvZmlsZVBvcHVwV2l0aEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIFBvcHVwV2l0aEltYWdlXHJcbmNvbnN0IHBvcHVwV2l0aEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKFxyXG4gIHsgcG9wdXBTZWxlY3RvcjogXCIjcHJldmlldy1pbWFnZS1tb2RhbFwiIH0sXHJcbiAgXCIubW9kYWxfX2ltYWdlXCIsXHJcbiAgXCIubW9kYWxfX3RpdGxlXCJcclxuKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGNvbmZpcm1EZWxldGVDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjY29uZmlybS1kZWxldGUtbW9kYWxcIixcclxuICBoYW5kbGVEZWxldGVDYXJkXHJcbik7XHJcbmNvbmZpcm1EZWxldGVDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBlZGl0QXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNlZGl0LWF2YXRhci1tb2RhbFwiLFxyXG4gIGhhbmRsZUVkaXRBdmF0YXJcclxuKTtcclxuZWRpdEF2YXRhclBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLUFQSS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIEF1dGhvcml6YXRpb246IGAke3Byb2Nlc3MuZW52LkFVVEhfVE9LRU59YCxcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuLy8gU2VjdGlvbiB2YXJpYWJsZSBkZWNsYXJhdGlvbiAtIGluaXRpYWxpemVkIGFmdGVyIEFQSSBkYXRhIGlzIGxvYWRlZFxyXG5sZXQgc2VjdGlvbjtcclxuXHJcblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckluZm8oKSwgYXBpLmdldEluaXRpYWxDYXJkcygpXSlcclxuICAudGhlbigoW3VzZXJEYXRhLCBjYXJkRGF0YV0pID0+IHtcclxuICAgIC8vIEluaXRpYWxpemUgc2VjdGlvbiB3aXRoIGNhcmQgZGF0YSBmcm9tIHRoZSBBUElcclxuICAgIHNlY3Rpb24gPSBuZXcgU2VjdGlvbihcclxuICAgICAgeyBpdGVtczogY2FyZERhdGEsIHJlbmRlcmVyOiByZW5kZXJDYXJkIH0sXHJcbiAgICAgIFwiLmNhcmRzX19saXN0XCJcclxuICAgICk7XHJcbiAgICBzZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgIHRpdGxlOiB1c2VyRGF0YS5uYW1lLFxyXG4gICAgICBzdWJ0aXRsZTogdXNlckRhdGEuYWJvdXQsXHJcbiAgICAgIGF2YXRhcjogdXNlckRhdGEuYXZhdGFyLFxyXG4gICAgfSk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHsgdGl0bGVTZWxlY3Rvciwgc3VidGl0bGVTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aXRsZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3N1YnRpdGxlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc3VidGl0bGVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRpdGxlOiB0aGlzLl90aXRsZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIHN1YnRpdGxlOiB0aGlzLl9zdWJ0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGF2YXRhcjogdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyB0aXRsZSwgc3VidGl0bGUsIGF2YXRhciB9KSB7XHJcbiAgICB0aGlzLl90aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgIHRoaXMuX3N1YnRpdGxlRWxlbWVudC50ZXh0Q29udGVudCA9IHN1YnRpdGxlO1xyXG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMgPSBhdmF0YXI7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0sIGltYWdlLCBjYXB0aW9uKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2ltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpbWFnZSk7XHJcbiAgICB0aGlzLl9jYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjYXB0aW9uKTtcclxuICB9XHJcblxyXG4gIG9wZW4oZGF0YSkge1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5faW1hZ2UuYWx0ID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fY2FwdGlvbi50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuY2xvc2UoKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImF2YXRhckVkaXRCdG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9maWxlRWRpdEJ0biIsImFkZE5ld0NhcmRCdG4iLCJwcm9maWxlVGl0bGUiLCJwcm9maWxlU3VidGl0bGUiLCJwcm9maWxlVGl0bGVJbnB1dCIsInByb2ZpbGVTdWJ0aXRsZUlucHV0IiwiZm9ybVZhbGlkYXRvcnMiLCJjb25zdHJ1Y3RvciIsImNhcmREYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZEltYWdlQ2xpY2siLCJoYW5kbGVEZWxldGVDYXJkIiwiaGFuZGxlTGlrZUNhcmQiLCJoYW5kbGVEZWxldGVMaWtlIiwiY29uZmlybURlbGV0ZUNhcmRQb3B1cCIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfaGFuZGxlQ2FyZEltYWdlQ2xpY2siLCJfY2FyZFNlbGVjdG9yIiwiX2NhcmRJZCIsIl9pZCIsIl9oYW5kbGVEZWxldGVDYXJkIiwiX2hhbmRsZUxpa2VDYXJkIiwiX2hhbmRsZURlbGV0ZUxpa2UiLCJfaXNMaWtlZCIsIl9jb25maXJtRGVsZXRlUG9wdXAiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfbGlrZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlTGlrZUljb24iLCJfZGVsZXRlQnV0dG9uIiwiX2hhbmRsZURlbGV0ZUJ0bkNsaWNrIiwiX2NhcmRFbGVtZW50IiwiX2NhcmRJbWFnZSIsIm9wZW4iLCJjYXJkSWQiLCJjYXJkRWxlbWVudCIsInRoZW4iLCJyZXMiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJfbGlrZUNvdW50ZXIiLCJ0ZXh0Q29udGVudCIsImlzTGlrZWQiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJhZGQiLCJlcnJvciIsIl9nZXRUZW1wbGF0ZSIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJnZXRWaWV3IiwiX2NhcmRUaXRsZSIsInNyYyIsImFsdCIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJyZXNldFZhbGlkYXRpb24iLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfaW5wdXRMaXN0IiwiZm9yRWFjaCIsImlucHV0RWxlbWVudCIsImRpc2FibGVCdXR0b24iLCJfc3VibWl0QnRuIiwiZGlzYWJsZWQiLCJpbnB1dEVscyIsIl9oYXNJbnZhbGlkSW5wdXQiLCJldmVyeSIsImlucHV0IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZW5hYmxlVmFsaWRhdGlvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIlNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwicmV2ZXJzZSIsIml0ZW0iLCJhZGRJdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX3BvcHVwQ2xvc2VCdG4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiX2hhbmRsZU1vZGFsQ2xvc2UiLCJfaGFuZGxlQnV0dG9uQ2xvc2UiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlT3BlblBvcHVwIiwiZXZ0IiwidGFyZ2V0Iiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9pbnB1dHMiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9wb3B1cFN1Ym1pdCIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0T2JqIiwidmFsdWUiLCJfY2FyZFRvRGVsZXRlIiwic3VibWl0QnV0dG9uIiwiZm9jdXMiLCJyZW5kZXJMb2FkaW5nIiwiaXNMb2FkaW5nIiwiZ2V0Rm9ybSIsImlucHV0VmFsdWVzIiwicmVzZXQiLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJkYXRhIiwicG9wdXBXaXRoSW1hZ2UiLCJnZXRDYXJkRWxlbWVudCIsIkNhcmQiLCJhcGkiLCJsaWtlQ2FyZCIsImRlbGV0ZUxpa2UiLCJjb25maXJtRGVsZXRlQ2FyZCIsInJlbmRlckNhcmQiLCJzZWN0aW9uIiwiZGVsZXRlQ2FyZCIsImZvcm1TZWxlY3RvciIsInZhbGlkYXRvciIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsImVkaXRBdmF0YXJQb3B1cCIsImVkaXRQcm9maWxlUG9wdXBXaXRoRm9ybSIsImFkZENhcmRQb3B1cFdpdGhGb3JtIiwidXNlckluZm8iLCJ0aXRsZVNlbGVjdG9yIiwic3VidGl0bGVTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX3RpdGxlRWxlbWVudCIsIl9zdWJ0aXRsZUVsZW1lbnQiLCJfYXZhdGFyRWxlbWVudCIsImdldFVzZXJJbmZvIiwidGl0bGUiLCJzdWJ0aXRsZSIsImF2YXRhciIsInNldFVzZXJJbmZvIiwiX3JlZjIiLCJhZGROZXdDYXJkIiwidXBkYXRlVXNlckluZm8iLCJ1cGRhdGVkVXNlciIsImFib3V0IiwiaW1hZ2UiLCJjYXB0aW9uIiwiX2ltYWdlIiwiX2NhcHRpb24iLCJfcmVmMyIsInVwZGF0ZUF2YXRhciIsInVzZXJEYXRhIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiX2hhbmRsZVJlc3BvbnNlIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJBdXRob3JpemF0aW9uIiwiYWxsIiwiX3JlZjQiXSwic291cmNlUm9vdCI6IiJ9